{"version":3,"file":"static/js/288.65966870.chunk.js","mappings":"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","sources":["components/Filter/Filter.styled.js","components/Filter/Filter.js","redux/selector.js","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/Loader/Loader.js","pages/Phonebook.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const InputSearch = styled.input`\n    margin: 8px 8px;\n    padding: 3px;\n    border-radius: 5px;\n    background-color: whitesmoke;\n`;\n\nexport const LabelSearch = styled.label`\n    display: flex;\n    align-items: center;\n`;","import { Box } from \"components/Box\";\nimport React from \"react\";\nimport { AiOutlineKey } from \"react-icons/ai\";\nimport { useDispatch } from 'react-redux';\nimport { setStatusFilter } from \"redux/filterSlice/filterSlice\";\nimport { InputSearch, LabelSearch } from \"./Filter.styled\";\n\nconst Filter = () => {\n\n    const dispatch = useDispatch();\n\n    const handleChangeFilter = e => {\n        dispatch(setStatusFilter(\n            e.currentTarget.value.toLowerCase().trim()\n        ));\n    };\n    \n    return (\n        <Box>\n            <Box as=\"h2\" marginBottom=\"15px\">\n            Contacts\n            </Box>\n            <LabelSearch>\n                <p><AiOutlineKey size={22} /></p>\n                <InputSearch\n                    placeholder=\"Find by name...\"\n                    type=\"text\"\n                    name=\"filter\"\n                    onChange={handleChangeFilter}\n                />\n            </LabelSearch>\n            \n        </Box>\n    )\n};\n\nexport default Filter;","export const getItems = state => state.contacts.items;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n\nexport const getFilter = state => state.filter;","import styled from \"styled-components\";\n\nexport const Button = styled.button`\n    margin-left: 5px;\n    padding: 3px;\n    border-radius: 5px;\n    border-color: grey;\n    min-height: 25px;\n`;\n\nexport const Informations = styled.p`\n    padding: 5px;\n`;","import React from \"react\";\nimport { AiOutlineDelete } from \"react-icons/ai\";\nimport { Box } from \"components/Box\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getFilter, getItems } from \"redux/selector\";\nimport { removeItem } from \"redux/operations\";\nimport { Button, Informations } from \"./ContactsList.styled\";\n\nconst ContactsList = () => {\n    const items = useSelector(getItems);\n    const filterContact = useSelector(getFilter).status; \n    const dispatch = useDispatch();\n\n    const getVisibleNameFilter = () => {\n        const normalFilter = filterContact.toLowerCase().trim();\n        \n        if (items) {\n            return items.filter(item => item.name.toLowerCase().includes(normalFilter))\n        }\n    }\n\n    const filterName = getVisibleNameFilter();\n    return (\n        <>\n            <Box as=\"ul\"\n            display=\"flex\"\n            flexDirection=\"column\"\n            padding=\"10px 0\"\n            >\n                {filterName && filterName.map( ({ number,name,id }) => (\n                    <Box\n                        as=\"li\"\n                        display='inline-flex'\n                        key={id}\n                        marginBottom=\"5px\"\n                        padding=\"3px\"\n                    >\n                        <Informations>{`${name}: ${number}`}</Informations>\n                        \n                        <Button onClick={() => \n                                dispatch(removeItem(id))\n                            }\n                        >\n                            <AiOutlineDelete size={20} />\n                        </Button>\n                    </Box>\n                ))}\n            </Box>\n        </>\n    )\n}\n\nexport default ContactsList;","import styled from \"styled-components\";\n\nexport const Input = styled.input`\n    @media screen and (min-width: 280px) {\n        margin: 7px;\n    }\n    @media screen and (min-width: 900px) {\n        margin: 0px 7px;\n    }\n    \n    padding: 3px;\n    border-radius: 5px;\n    background-color: whitesmoke;\n`;\nexport const Label = styled.label`\n    @media screen and (max-width: 899px) {\n        align-items: center;\n    }\n    margin-right: 8px;\n    display: flex;\n    align-items: flex-end;\n`;\n\nexport const Title = styled.h1`\n    margin-bottom: 15px;\n    \n    display: flex;\n    justify-content: center;\n`;\nexport const FormButton = styled.button`\n    border-radius: 5px;\n    border-color: grey;\n`;\nexport const Form = styled.form`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    align-content: center;\n    justify-content: center;\n    align-items: center;\n`;","import { AiOutlineUser,AiOutlinePhone } from \"react-icons/ai\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addItem } from \"redux/operations\";\nimport { getItems } from \"redux/selector\";\nimport { Form, FormButton, Input, Label, Title } from \"./ContactForm.styled\";\n\n\n\nfunction ContactForm() {\n    const dispatch = useDispatch();\n    const items = useSelector(getItems);\n\n    const handleSubmitForm = e => {\n        e.preventDefault();\n\n        const form = e.target;\n        const name = form.elements.name.value;\n        const number = form.elements.number.value;\n        if (items) {\n            items.find(item => item.name.toLowerCase() === name.toLowerCase())\n            ? alert(name + ' is already in contacts')\n            : dispatch(addItem({ name,number }))\n        }\n\n        form.reset();\n    };\n\n    return (\n            <>\n                <Title>\n                    Phonebook\n            </Title>\n                <Form  onSubmit={handleSubmitForm}>\n                    <Label>\n                        <p>\n                            <AiOutlineUser size={22} />\n                        </p>\n                        \n                    <Input\n                        placeholder=\"Please write name...\"\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                        />\n                    </Label>\n                    <Label>\n                        <p>\n                            <AiOutlinePhone size={22} />\n                        </p>\n                    <Input\n                            placeholder=\"Please write number...\"\n                            type=\"tel\"\n                            name=\"number\"\n                            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                            required\n                            />\n                    </Label>\n                    <FormButton type=\"submit\">Add</FormButton>\n                </Form>\n            </>\n        )\n}\n\nexport default ContactForm;","import { Box } from \"components/Box\";\nimport BarLoader from \"react-spinners/BarLoader\";\n\nconst Loader = () => {\n    return (\n        <Box\n            marginBottom=\"5px\"\n            padding=\"3px\"\n        >\n            <BarLoader color=\"#36d7b7\" size={20}/>\n        </Box>\n    )\n}\n\nexport default Loader;\n","import { GlobalStyle } from '../components/GlobalStyle';\nimport { Box } from \"components/Box\";\nimport Filter from \"../components/Filter/Filter\";\nimport ContactsList from \"../components/ContactsList/ContactsList\";\nimport ContactForm from \"../components/ContactForm/ContactForm\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/operations';\nimport { getError, getIsLoading } from 'redux/selector';\nimport Loader from '../components/Loader/Loader';\n\nexport default function Phonebook() {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(getIsLoading);\n    const error = useSelector(getError);\n\n    useEffect(() => {\n        dispatch(fetchContacts())\n    }, [dispatch]);\n\n\n    return (\n        <Box\n            margin=\"0 auto\"\n            padding=\"0 40px\"\n        >\n            <ContactForm/>\n            <Box padding=\"20px 0\">\n                <Filter/>\n                {isLoading && !error && <Loader />}\n                <ContactsList />\n            </Box>\n            <GlobalStyle />\n        </Box>\n    );\n}"],"names":["InputSearch","styled","LabelSearch","dispatch","useDispatch","Box","as","marginBottom","size","placeholder","type","name","onChange","e","setStatusFilter","currentTarget","value","toLowerCase","trim","getItems","state","contacts","items","getIsLoading","isLoading","getError","error","getFilter","filter","Button","Informations","useSelector","filterContact","status","filterName","normalFilter","item","includes","getVisibleNameFilter","display","flexDirection","padding","map","number","id","onClick","removeItem","Input","Label","Title","FormButton","Form","onSubmit","preventDefault","form","target","elements","find","alert","addItem","reset","pattern","title","required","color","Phonebook","useEffect","fetchContacts","margin","GlobalStyle"],"sourceRoot":""}